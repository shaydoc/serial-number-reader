(function(r,d){typeof exports=="object"&&typeof module<"u"?d(exports):typeof define=="function"&&define.amd?define(["exports"],d):(r=typeof globalThis<"u"?globalThis:r||self,d(r["serial-number-reader"]={}))})(this,function(r){"use strict";async function d(t){if(!t)throw new Error("No file chosen");const n=await c(t),o=URL.createObjectURL(n),e=new Image;return e.src=o,await e.decode(),e}async function s(t){if(typeof BarcodeDetector>"u")throw new Error("Barcode Detector is not supported by this browser.");return(await a(t)).map(e=>e.rawValue)}function c(t){return new Promise((n,o)=>{const e=new FileReader;e.onloadend=()=>{if(!e.result){o(new Error("Expected FileReader result to be defined"));return}const i=new Blob([e.result],{type:t.type});n(i)},e.onerror=o,e.readAsArrayBuffer(t)})}function a(t,n=["code_39","codabar","ean_13"]){return new Promise((o,e)=>{if(typeof BarcodeDetector>"u"){e(new Error("Barcode Detector is not supported by this browser."));return}new BarcodeDetector(n).detect(t).then(u=>{o(u)}).catch(e)})}r.detectBarcodes=a,r.detectSerialNumbers=s,r.readFileAsBlob=c,r.readImageFile=d,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});
